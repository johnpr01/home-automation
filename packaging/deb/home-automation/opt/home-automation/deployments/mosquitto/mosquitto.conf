# Mosquitto MQTT Broker Configuration for Raspberry Pi 5 Home Automation
# =======================================================================

# General Configuration
# ---------------------
# Use a writable location for PID file when running as user 1883:1883
pid_file /mosquitto/data/mosquitto.pid

# Persistence settings
persistence true
persistence_location /mosquitto/data/
autosave_interval 1800

# Logging Configuration
# --------------------
log_dest file /mosquitto/log/mosquitto.log
log_dest stdout

# Log types to include
log_type error
log_type warning  
log_type notice
log_type information
log_type debug

# Include timestamp in log messages
log_timestamp true
log_timestamp_format %Y-%m-%dT%H:%M:%S

# Connection logging
connection_messages true
log_timestamp true

# Network Listeners
# -----------------

# Standard MQTT listener (port 1883)
listener 1883 0.0.0.0
protocol mqtt
socket_domain ipv4

# WebSocket listener (port 9001) for web clients
listener 9001 0.0.0.0  
protocol websockets
socket_domain ipv4

# Security Configuration
# ----------------------
# For development/testing - allow anonymous connections
allow_anonymous true

# For production, uncomment these lines and set up authentication:
# allow_anonymous false
# password_file /mosquitto/config/passwd
# acl_file /mosquitto/config/acl

# Connection Limits (optimized for Raspberry Pi 5)
# ------------------------------------------------
max_connections 100
max_inflight_messages 20
max_queued_messages 1000
#message_size_limit 268435456

# Client Connection Settings
# --------------------------
#keepalive_interval 60
retry_interval 20
sys_interval 10
#store_clean_interval 60

# Bridge Configuration (if connecting to external brokers)
# --------------------------------------------------------
# Uncomment and configure if you need to bridge to other MQTT brokers
# connection bridge-01
# address external-broker.example.com:1883
# topic # both 0 "" ""

# Will Message Settings
# ---------------------
# Clients can set last will messages
# These are published when a client disconnects unexpectedly

# Quality of Service Settings
# ---------------------------
max_queued_messages 1000
queue_qos0_messages false
max_packet_size 268435456

# Performance Tuning for Raspberry Pi 5
# --------------------------------------
# Optimize for embedded system performance
sys_interval 10
#store_clean_interval 60
persistent_client_expiration 2h

# WebSocket Configuration
# ----------------------
# Additional settings for WebSocket support
websockets_log_level 0
websockets_headers_size 1024

# System Topics ($SYS)
# --------------------
# Enable system information topics
# Clients can subscribe to $SYS/# to get broker statistics
sys_interval 10

# Client ID restrictions
# ---------------------
# Uncomment to require unique client IDs
# require_certificate false

# Topic restrictions
# ------------------
# Uncomment to restrict topic patterns (useful for security)
# topic_pattern write temperature/+/+
# topic_pattern read $SYS/#

# Retained message settings
# ------------------------
retained_persistence true
max_inflight_bytes 0

# Auto-save settings
# -----------------
# Save in-memory database to disk every 30 minutes
autosave_interval 1800
autosave_on_changes false

# Memory optimization for Pi 5
# ----------------------------
# Set memory limits to prevent excessive usage
memory_limit 67108864  # 64MB limit

# Additional security headers for WebSocket
# ----------------------------------------
# Add security headers for web clients
# websockets_headers X-Frame-Options DENY
# websockets_headers X-Content-Type-Options nosniff
